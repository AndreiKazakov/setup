- hosts: localhost
  vars:
    is_linux: "{{ lookup('pipe', 'uname') == 'Linux' }}"
    vimrcs: ['.vimrc', '.ideavimrc']
    external_zsh_plugins: ['zsh-autosuggestions', 'zsh-syntax-highlighting', 'zsh-completions']
    zsh_plugins: ['kubectl']
    git_repos: ['superbrothers/zsh-kubectl-prompt']
    git_configs:
      - name: user.name
        value: Andrei Kazakov
      - name: core.editor
        value: vim
      - name: color.ui
        value: auto
      - name: alias.ll
        value: log --abbrev-commit --abbrev=6 --format="%h %Cblue%aN%Cgreen%d%Creset %s" --graph --decorate=short
      - name: alias.d
        value: diff --minimal --word-diff=color --word-diff-regex=\"([0-9@A-Za-z]+|[^0-9@A-Za-z()]+|[()])\"
      - name: alias.sho
        value: show --minimal --word-diff=color --word-diff-regex=\"([0-9@A-Za-z]+|[^0-9@A-Za-z()]+|[()])\"
      - name: interactive.diffFilter
        value: '`brew --prefix git`/share/git-core/contrib/diff-highlight/diff-highlight'
      - name: core.excludesfile
        value: ~/.dot/.gitignore
      - name: core.pager
        value: '`brew --prefix git`/share/git-core/contrib/diff-highlight/diff-highlight | less -r'
    common_packages:
      - git
      - httpie
      - tig
      - zsh
      - vim
      - jq
      - htop
      - docker
      - tree
      - ripgrep
      - fzf
      - go
      - watchexec
      - autojump
    brew_packages:
      - watch
      - bash
      - python3
      - git-crypt
    pacman_packages:
      - python
    go_packages:
      - github.com/jingweno/ccat
      - github.com/direnv/direnv

  tasks:
    - name: Copy common configs
      copy:
        src: .dot/
        dest: ~/.dot/

    - name: Copy ammonite (scala REPL) settings
      copy:
        src: predef.sc
        directory_mode: yes
        dest: ~/.ammonite/predef.sc
        force: no

    - name: Install all the packages (Pacman)
      become: yes
      package:
        name: '{{ item }}'
        state: latest
      with_items: '{{ common_packages + pacman_packages }}'
      when: is_linux

    - name: Install all the packages (Go)
      command: go get -u '{{ item }}'
      with_items: '{{ go_packages }}'
      when: is_linux

    - name: Install all the packages (Homebrew)
      homebrew:
        name: "{{ item }}"
        state: latest
      with_items: '{{ common_packages + brew_packages }}'
      when: not is_linux

    - name: Set up git configs
      git_config:
        name: '{{ item.name }}'
        value: '{{ item.value }}'
        scope: global
      with_items: '{{ git_configs }}'

    - name: Create vim files
      copy:
        content: ""
        dest: '~/{{ item }}'
        force: no
      with_items: '{{ vimrcs }}'

    - name: Source common vim configs
      lineinfile:
        path: '~/{{ item }}'
        line: source ~/.dot/.vimrc
      with_items: '{{ vimrcs }}'

    - name: Install git repos
      git:
        repo: 'git://github.com/{{ item }}.git'
        dest: '~/prj/{{ item }}'
      with_items: '{{ git_repos }}'

    - name: Install Oh My Zsh
      git:
        repo: git://github.com/robbyrussell/oh-my-zsh.git
        dest: ~/.oh-my-zsh

    - name: Create a new Zsh config
      copy:
        src: ~/.oh-my-zsh/templates/zshrc.zsh-template
        dest: ~/.zshrc
        force: no
    
    - name: Source common zsh configs
      lineinfile:
        path: ~/.zshrc
        line: source ~/.dot/.zshrc

    - name: Install Zsh Plugins
      git:
        repo: 'https://github.com/zsh-users/{{ item }}'
        dest: '~/.oh-my-zsh/custom/plugins/{{ item }}'
      with_items: '{{ external_zsh_plugins }}'

    - name: Source External Zsh Plugins
      lineinfile:
        path: ~/.zshrc
        insertafter: '^plugins=.*$'
        line: '{{ external_zsh_plugins | join(" ") }}'
    
    - name: Source Zsh Plugins
      lineinfile:
        path: ~/.zshrc
        insertafter: '{{ external_zsh_plugins | join(" ") }}'
        line: '{{ zsh_plugins | join(" ") }}'

    - name: Use Zsh as a default shell
      become: true
      shell: chsh -s /bin/zsh
